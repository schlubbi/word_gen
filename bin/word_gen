#!/usr/bin/env ruby

require 'optparse'

begin
  require 'word_gen'
rescue LoadError
  require 'rubygems'
  require 'word_gen'
end

options = {}

OptionParser.new do |opts|
  opts.on('-w', '--word-length WORD_LENGTH', 'The length of the word') do |f|
    options[:word_length] = f
  end


  modes = WordGen::Modes.constants.map(&:to_s)
  opts.on('-s', '--set SET', modes, 'Available charachter sets', " (#{modes.join(",")})") do |f|
    options[:character_set] = f
  end

  opts.on('-o', '--output-file OUTPUT_FILE', 'Output file name') do |f|
    options[:output_file] = f
  end

  options[:verbose] = false
  opts.on('-v', '--verbose', 'Get a verbose version of the character sets', 'Use in combination with "-vl"') do
    options[:verbose] = true
  end

  opts.on('-l', '--list-sets', 'Lists available character sets') do
    puts "Character sets:"
    WordGen::Modes.constants.each do |m|
      set = WordGen::Modes.class_eval m.to_s
      if options[:verbose]
        puts "#{m} #{'SIZE:'.rjust(30- m.size)} #{set.size} \n#{set}"
      else
        puts "#{m} #{'SIZE:'.rjust(30- m.size)} #{set.size}"
      end
    end
    exit
  end

  opts.on_tail('-h', '--help', '--usage', 'Prints this help') do
    puts opts
    exit
  end

  opts.on_tail('-v', '--version', 'Prints the version') do
    puts "word_gen version #{WordGen::VERSION}"
    exit
  end
end.parse!

word_length = options[:word_length]
character_set = options[:character_set]
output_file = options[:output_file]

unless character_set && WordGen::Modes.constants.include?(character_set.to_sym)
  puts 'Choose a character set with -s'
  puts 'Get a list of all available character sets with -l'
  exit 1
end

unless word_length
  puts 'Provide a word_length with -w'
  exit 1
end

if output_file
  File.open(output_file, "w+") do |file|
    WordGen::Generator.new(word_length, WordGen::Modes.class_eval(character_set), file).start
  end
else
  WordGen::Generator.new(word_length, WordGen::Modes.class_eval(character_set)).start
end
